spring.application.name=project
server.port=8088

#DB ??
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/berrydb
spring.datasource.username=berryuser
spring.datasource.password=mysql

#JPA ??
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=update
#ddl-auto=none : ? ?? / create(??) / create-drop(?? ? ?? ?? ??) /
spring.jpa.properties.hibernate.format_sql=true

spring.thymeleaf.cache=false

#haechan

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

spring.config.import=classpath:external-api.properties

#oauth kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8088/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_image,account_email,phone_number,birthyear,birthday,name
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-secret=${kakao.secret.key}
spring.security.oauth2.client.registration.kakao.client-id=${kakao.client.key}
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

#oauth naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8088/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=name,email,birthyear,birthday,profile_image,mobile
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-secret=${naver.secret.key}
spring.security.oauth2.client.registration.naver.client-id=${naver.client.key}
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#oauth google
spring.security.oauth2.client.registration.google.client-id=${google.client.key}
spring.security.oauth2.client.registration.google.client-secret=${google.secret.key}
spring.security.oauth2.client.registration.google.scope=email,profile,https://www.googleapis.com/auth/user.birthday.read,https://www.googleapis.com/auth/user.phonenumbers.read
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8088/login/oauth2/code/google
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

#coolsms
coolsms.api.key=${coolsms.key}
coolsms.api.secret=${coolsms.secret.key}
coolsms.sender.number=${coolsms.fromNumber}

#stater-mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=whgocks@gmail.com
spring.mail.password=${stater.mail.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ??? on off
crawl.enabled=false

#fileupload ??
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB
#spring.servlet.multipart.location=D:\web_0226_pjs\_myProject\_java\_fileUpload

#error ??
server.error.include-exception=true
server.error.include-stacktrace=always
server.error.path=/error
whitelabel.enabled=false

# ??
 #>> log4jdbc ? ???? SQL ??? ANSI ?? ??? ????? ??
spring.datasource.output.ansi.enabled=always
 #>> ?? ???? (com.example.bootJPA) ? ?? ??? DEBUG ? ??
logging.level.com.example.project=DEBUG
 #>> Thymeleaf ??? ?? ?? ?? ??? Error ? ??
logging,level.org.thymeleaf=ERROR


#FileCountLimitExceededException Error attachment multipart limit break KMS
server.tomcat.max-part-count=-1

# API ??

spring.thymeleaf.enable-spring-el-compiler=true

